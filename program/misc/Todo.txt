x Tensorrang in jedem Knoten speichern
x Mehrfachvorkommen eliminieren (common subexpression elimination):
    x Alle Unterbäume listen
    x Gleiche Unterbäume eliminieren
    x Baum neu aufbauen
x Ableitungsregeln
    x Produktregel
        x Regel
        x Tests
    x Summenregel
        x Regel
        x Tests
    - Elementweise Funktionen
        x (-)
        x sin
        x cos
        x exp
        x (/)
        x tan
        x arctan
        x arcsin
        x arccos
        x log
        x tanh
        x abs
        x sign
        x relu
        x (^)
    x Besondere Funktionen
        x Determinant
		x Inverse
        x Adjungierte
        x Jede Funktion braucht ihre eigene Prozedur um ihren output-tensorrang zu berechnen
- Delta als Eingabe erlauben
- Vereinfachung
	x a + (- b) = a - b
	x log(exp(...)) = a^b
	x det(X)*inv(X) = adj(X)
	x Konstanten zusammenfassen
	x elementwise_inverse in 1/x verwandeln
	- Unnütze deltas entfernen
	
x delta(K) als Ersatz für Identity
x Tensorrang in abgeleitetem Ausdruck richtig angeben
x statt 'declare argument expression', 'declare expression derivative wrt'
x Broadcasting für Sachen wie A + 1
x delta(k) statt delta(2k)
x Im Graphen linkes und rechtes Kind kennzeichnen
x Doppelte Pfeile fixen
x Achsennamen speichern und propagieren
  x Doppelnennung der Achsen in der Liste fixen
  x Dictionary, das Achsennamen zu ihrem Ursprung zuordnet
  x Achsenursprünge ausgeben
  x Für String-Ausgabe: Konstanten kriegen eigenen Namen, damit wir ihre Achsennamen ausgeben können
  x Achsen, die in inv/det/adj kommen, sind gleich
  x Achsenvertauschungen bei Multiplikationen fixen
- Spezialfall verschwindende Achsen handlen (Delta aufpusten)
- Schöneres Print

----------------------------------
Use Cases:
- Codeerzeugung
- Konvexitätstests über Graphendarstellung
- Stringausgabe